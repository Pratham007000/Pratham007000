.data
F:  .word 1, 1, 0, 1, 0, 0, 0, 1, 0
M:  .word 1, 1, 0, 1, 0, 0, 0, 1, 0
prompt: .asciiz "Enter the value of n: "
result: .asciiz "F(%d) is %d\n"

.text
.globl main

# Function to multiply two matrices
multiply:
    # $a0: matrix a
    # $a1: matrix b
    # $a2: result matrix

    # Initialize result matrix with zeros
    li $t0, 0
    li $t1, 0
    li $t2, 0
    li $t3, 0
    li $t4, 0
    li $t5, 0
    li $t6, 0
    li $t7, 0
    li $t8, 0

    # Perform matrix multiplication
    # Row 1
    lw $t0, 0($a0)
    lw $t1, 4($a0)
    lw $t2, 8($a0)
    lw $t3, 0($a1)
    lw $t4, 4($a1)
    lw $t5, 8($a1)
    mul $t6, $t0, $t3
    mul $t7, $t1, $t4
    mul $t8, $t2, $t5
    add $t9, $t6, $t7
    add $t10, $t9, $t8
    sw $t10, 0($a2)

    # Row 2
    lw $t0, 0($a0)
    lw $t1, 4($a0)
    lw $t2, 8($a0)
    lw $t3, 1($a1)
    lw $t4, 5($a1)
    lw $t5, 9($a1)
    mul $t6, $t0, $t3
    mul $t7, $t1, $t4
    mul $t8, $t2, $t5
    add $t9, $t6, $t7
    add $t10, $t9, $t8
    sw $t10, 4($a2)

    # Row 3
    lw $t0, 0($a0)
    lw $t1, 4($a0)
    lw $t2, 8($a0)
    lw $t3, 2($a1)
    lw $t4, 6($a1)
    lw $t5, 10($a1)
    mul $t6, $t0, $t3
    mul $t7, $t1, $t4
    mul $t8, $t2, $t5
    add $t9, $t6, $t7
    add $t11, $t9, $t8
    sw $t11, 8($a2)

    jr $ra

# Function to raise matrix F to the power of n
power:
    # $a0: matrix F
    # $a1: n
    # $v0: result

    # Base case: n == 1
    beq $a1, 1, base_case

    # Recursive case
    divu $a1, $a1, 2
    mflo $t0    # t0 = n / 2

    # Call power(F, n/2)
    jal power

    # Square the result
    move $a0, $v0
    multiply $a0, $a0, $a0

    # Check if n is odd
    li $t1, 1
    beq $a1, $t1, odd_power

    jr $ra

base_case:
    # F^1 = F
    move $v0, $a0
    jr $ra

odd_power:
    # F^n = F^(n/2) * F
    move $a0, $v0
    move $a1, $t0
    jal multiply
    jr $ra

# Function to find the nth term of the sequence
findNthTerm:
    # $a0: n
    # $v0: result

    # Base cases: F(0) = 0, F(1) = F(2) = 1
    beq $a0, 0, base_case
    beq $a0, 1, base_case
    beq $a0, 2, base_case

    # F(n) = power(F, n-2)
    sub $a0, $a0, 2
    jal power

    jr $ra

# Main program
main:
    li $v0, 4
    la $a0, prompt
    syscall

    li $v0, 5
    syscall
    move $a0, $v0

    jal findNthTerm

    li $v0, 10
    syscall